{"version":3,"sources":["views/PoolDetail/PoolDetail.style.ts","views/PoolDetail/PoolDetail.tsx","views/PoolDetail/index.ts"],"names":["Container","styled","ContentView","palette","Header","div","PoolInfo","AssetLabel","Label","media","sm","Section","Chart","PoolChart","PoolAction","PoolDetailView","pool","swapRouter","getSwapRoute","Asset","RUNE","asset","liquidityRouter","getAddLiquidityRoute","isDesktopView","Grid","useBreakpoint","title","content","size","showLabel","weight","name","ticker","color","type","assetUSDPrice","toSignificant","detail","status","to","round","style","marginRight","fixedWidth","SwapOutlined","DatabaseOutlined","gutter","xs","md","toString","PoolDetail","useParams","useMidgard","pools","poolLoading","poolAsset","fromAssetString","Pool","byAsset"],"mappings":"sRAMaA,EAAYC,YAAOC,cAAPD,CAAH,+CACNE,kBAAQ,aAAc,IAGzBC,EAASH,IAAOI,IAAV,iIAONC,EAAWL,IAAOI,IAAV,sEAKRE,EAAaN,YAAOO,QAAPP,CAAH,mGAKnBQ,IAAMC,GALa,qDAUVC,EAAUV,IAAOI,IAAV,oDAIPO,EAAQX,YAAOY,YAAPZ,CAAH,6CAGLa,EAAab,IAAOI,IAAV,yG,OCCjBU,EAAiB,SAAC,GAA8B,IAAD,IAA3BC,EAA2B,EAA3BA,KAClBC,EAAaC,YAAaC,QAAMC,OAAQJ,EAAKK,OAC7CC,EAAkBC,YAAqBP,EAAKK,OAC5CG,EAAa,oBAAGC,IAAKC,uBAAR,aAAG,EAAsBhB,UAAzB,SAEnB,OACE,eAAC,EAAD,WACE,cAAC,SAAD,CAAQiB,MAAM,GAAGC,QAAQ,gCACzB,eAAC,EAAD,WACGJ,GACC,eAAC,EAAD,WACE,cAAC,YAAD,CAAWK,KAAK,MAAMR,MAAOL,EAAKK,MAAOS,WAAW,IACpD,eAAC,EAAD,CAAmBC,OAAO,OAA1B,UACGf,EAAKK,MAAMW,KADd,KACsBhB,EAAKK,MAAMY,OADjC,OAGA,cAAC,EAAD,CAAmBC,MAAM,OAAzB,SACGlB,EAAKK,MAAMc,OAEd,eAAC,EAAD,eACInB,EAAKoB,cAAcC,cAAc,UAIvCb,GACA,eAAC,EAAD,WACE,cAAC,YAAD,CAAWH,MAAOL,EAAKK,QACvB,eAAC,QAAD,CAAOQ,KAAK,SAAZ,cAAuBb,EAAKoB,cAAcC,cAAc,SAG5D,eAAC,EAAD,WAC0B,cAAvBrB,EAAKsB,OAAOC,QACX,cAAC,IAAD,CAAMC,GAAIvB,EAAV,SACE,eAAC,SAAD,CAAQwB,OAAK,EAACC,MAAO,CAAEC,YAAa,OAASC,YAAY,EAAzD,UACE,cAACC,EAAA,EAAD,IACCrB,GAAiB,YAIxB,cAAC,IAAD,CAAMgB,GAAIlB,EAAV,SACE,eAAC,SAAD,CAAQmB,OAAK,EAACG,YAAY,EAA1B,UACE,cAACE,EAAA,EAAD,IACCtB,GAAiB,uBAK1B,cAAC,EAAD,UACE,eAAC,IAAD,CAAKuB,OAAQ,CAAC,GAAI,IAAlB,UACE,cAAC,IAAD,CAAKC,GAAI,GAAItC,GAAI,GAAIuC,GAAI,EAAzB,SACE,cAAC,YAAD,CAAWjC,KAAMA,MAEnB,cAAC,IAAD,CAAKgC,GAAI,GAAItC,GAAI,GAAIuC,GAAI,GAAzB,SACE,cAAC,EAAD,CAAcjC,KAAMA,WAI1B,cAAC,UAAD,CAASK,MAAOL,EAAKK,MAAM6B,iBAKlBC,EA9EI,WAAO,IAChB9B,EAAU+B,cAAV/B,MADe,EAEQgC,cAAvBC,EAFe,EAEfA,MAAOC,EAFQ,EAERA,YAETC,EAAYrC,QAAMsC,gBAAgBpC,GAExC,IAAKmC,GAAaD,EAAa,OAAO,KAEtC,IAAMvC,EAAO0C,OAAKC,QAAQH,EAAWF,GAErC,OAAItC,EACK,cAAC,EAAD,CAAgBA,KAAMA,IAGxB,MCnCMmC","file":"static/js/15.986a5f6b.chunk.js","sourcesContent":["import { ContentView, PoolChart, Label } from 'components'\nimport styled from 'styled-components'\nimport { palette } from 'styled-theme'\n\nimport { media } from 'helpers/style'\n\nexport const Container = styled(ContentView)`\n  background: ${palette('background', 3)};\n`\n\nexport const Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n`\n\nexport const PoolInfo = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nexport const AssetLabel = styled(Label)`\n  margin-left: 4px;\n  margin-right: 8px;\n\n  font-size: 14px;\n  ${media.sm`\n    font-size: 28px;\n  `}\n`\n\nexport const Section = styled.div`\n  margin-bottom: 20px;\n`\n\nexport const Chart = styled(PoolChart)`\n  height: 100%;\n`\nexport const PoolAction = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\n\nimport { useParams } from 'react-router'\nimport { Link } from 'react-router-dom'\n\nimport { SwapOutlined, DatabaseOutlined } from '@ant-design/icons'\nimport { Grid, Row, Col } from 'antd'\nimport {\n  TxTable,\n  Helmet,\n  Button,\n  AssetData,\n  PoolStats,\n  Label,\n} from 'components'\nimport { Asset, Pool } from 'multichain-sdk'\n\nimport { useMidgard } from 'redux/midgard/hooks'\n\nimport { getSwapRoute, getAddLiquidityRoute } from 'settings/constants'\n\nimport * as Styled from './PoolDetail.style'\n\nconst PoolDetail = () => {\n  const { asset } = useParams<{ asset: string }>()\n  const { pools, poolLoading } = useMidgard()\n\n  const poolAsset = Asset.fromAssetString(asset)\n\n  if (!poolAsset || poolLoading) return null\n\n  const pool = Pool.byAsset(poolAsset, pools)\n\n  if (pool) {\n    return <PoolDetailView pool={pool} />\n  }\n\n  return null\n}\n\nconst PoolDetailView = ({ pool }: { pool: Pool }) => {\n  const swapRouter = getSwapRoute(Asset.RUNE(), pool.asset)\n  const liquidityRouter = getAddLiquidityRoute(pool.asset)\n  const isDesktopView = Grid.useBreakpoint()?.sm ?? false\n\n  return (\n    <Styled.Container>\n      <Helmet title=\"\" content=\"Multichain Asgardex web app\" />\n      <Styled.Header>\n        {isDesktopView && (\n          <Styled.PoolInfo>\n            <AssetData size=\"big\" asset={pool.asset} showLabel={false} />\n            <Styled.AssetLabel weight=\"bold\">\n              {pool.asset.name} ({pool.asset.ticker})\n            </Styled.AssetLabel>\n            <Styled.AssetLabel color=\"gray\">\n              {pool.asset.type}\n            </Styled.AssetLabel>\n            <Styled.AssetLabel>\n              ${pool.assetUSDPrice.toSignificant(6)}\n            </Styled.AssetLabel>\n          </Styled.PoolInfo>\n        )}\n        {!isDesktopView && (\n          <Styled.PoolInfo>\n            <AssetData asset={pool.asset} />\n            <Label size=\"normal\">${pool.assetUSDPrice.toSignificant(6)}</Label>\n          </Styled.PoolInfo>\n        )}\n        <Styled.PoolAction>\n          {pool.detail.status === 'available' && (\n            <Link to={swapRouter}>\n              <Button round style={{ marginRight: '8px' }} fixedWidth={false}>\n                <SwapOutlined />\n                {isDesktopView && 'SWAP'}\n              </Button>\n            </Link>\n          )}\n          <Link to={liquidityRouter}>\n            <Button round fixedWidth={false}>\n              <DatabaseOutlined />\n              {isDesktopView && 'Liquidity'}\n            </Button>\n          </Link>\n        </Styled.PoolAction>\n      </Styled.Header>\n      <Styled.Section>\n        <Row gutter={[16, 16]}>\n          <Col xs={24} sm={24} md={8}>\n            <PoolStats pool={pool} />\n          </Col>\n          <Col xs={24} sm={24} md={16}>\n            <Styled.Chart pool={pool} />\n          </Col>\n        </Row>\n      </Styled.Section>\n      <TxTable asset={pool.asset.toString()} />\n    </Styled.Container>\n  )\n}\n\nexport default PoolDetail\n","import PoolDetail from './PoolDetail'\n\nexport default PoolDetail\n"],"sourceRoot":""}