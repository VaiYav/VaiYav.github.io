{"version":3,"sources":["views/Liquidity/Liquidity.style.ts","views/Liquidity/Liquidity.tsx","views/Liquidity/index.ts"],"names":["ToolContainer","styled","div","LiquidityView","useMidgard","chainMemberDetails","chainMemberDetailsLoading","getAllMemberDetails","wallet","useWallet","useEffect","meta","poolAsset","Asset","BTC","type","to","getAddLiquidityRoute","Object","keys","map","chain","ChainMemberPoolCard","data","loading","Liquidity"],"mappings":"oMAEaA,E,KAAgBC,EAAOC,IAAV,gFAAGD,CAAH,iI,OCkDXE,EApCO,WAAO,IAAD,EAKtBC,cAHFC,EAFwB,EAExBA,mBACAC,EAHwB,EAGxBA,0BACAC,EAJwB,EAIxBA,oBAEMC,EAAWC,cAAXD,OAMR,OAJAE,qBAAU,WACRH,MACC,CAACA,IAGF,eAAC,YAAD,CAAWI,KAAK,YAAYC,UAAWC,QAAMC,MAAOC,KAAK,YAAzD,WACIP,GAAU,cAAC,QAAD,qCACXA,GACC,qCACE,cAAC,EAAD,UACE,cAAC,IAAD,CAAMQ,GAAIC,YAAqBJ,QAAMC,OAArC,SACE,cAAC,cAAD,gCAGHI,OAAOC,KAAKd,GAAoBe,KAAI,SAACC,GAAD,aACnC,cAACC,EAAA,EAAD,CAEED,MAAOA,EACPE,KAAMlB,EAAmBgB,GACzBG,QAAO,iBAAElB,QAAF,IAAEA,OAAF,EAAEA,EAA4Be,UAA9B,UAHFA,aCtCJI","file":"static/js/14.90f80a8d.chunk.js","sourcesContent":["import styled from 'styled-components/macro'\n\nexport const ToolContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n\n  padding: 4px 10px;\n\n  a {\n    width: 100%;\n  }\n\n  button {\n    width: 100%;\n  }\n`\n","import React, { useEffect } from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport { PanelView, FancyButton, Label } from 'components'\nimport { Asset, SupportedChain } from 'multichain-sdk'\n\nimport { ChainMemberPoolCard } from 'components/ChainMemberPoolCard'\n\nimport { useMidgard } from 'redux/midgard/hooks'\nimport { useWallet } from 'redux/wallet/hooks'\n\nimport { getAddLiquidityRoute } from 'settings/constants'\n\nimport * as Styled from './Liquidity.style'\n\nconst LiquidityView = () => {\n  const {\n    chainMemberDetails,\n    chainMemberDetailsLoading,\n    getAllMemberDetails,\n  } = useMidgard()\n  const { wallet } = useWallet()\n\n  useEffect(() => {\n    getAllMemberDetails()\n  }, [getAllMemberDetails])\n\n  return (\n    <PanelView meta=\"Liquidity\" poolAsset={Asset.BTC()} type=\"liquidity\">\n      {!wallet && <Label>Please connect wallet.</Label>}\n      {wallet && (\n        <>\n          <Styled.ToolContainer>\n            <Link to={getAddLiquidityRoute(Asset.BTC())}>\n              <FancyButton>Add Liquidity</FancyButton>\n            </Link>\n          </Styled.ToolContainer>\n          {Object.keys(chainMemberDetails).map((chain) => (\n            <ChainMemberPoolCard\n              key={chain}\n              chain={chain as SupportedChain}\n              data={chainMemberDetails[chain]}\n              loading={chainMemberDetailsLoading?.[chain] ?? false}\n            />\n          ))}\n        </>\n      )}\n    </PanelView>\n  )\n}\n\nexport default LiquidityView\n","import Liquidity from './Liquidity'\n\nexport default Liquidity\n"],"sourceRoot":""}